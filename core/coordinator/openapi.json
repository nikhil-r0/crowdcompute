{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Simple root endpoint to confirm the server is running.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register Worker",
        "description": "Registers a new worker and assigns a unique ID.",
        "operationId": "register_worker_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/get-task": {
      "post": {
        "summary": "Assign Task",
        "description": "Assigns a task to a worker if one is available.",
        "operationId": "assign_task_get_task_post",
        "parameters": [
          {
            "name": "worker_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Worker Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/release-task": {
      "post": {
        "summary": "Release Task",
        "description": "Allows a worker to release a task after it's completed.",
        "operationId": "release_task_release_task_post",
        "parameters": [
          {
            "name": "worker_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Worker Id"
            }
          },
          {
            "name": "task_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get All Tasks",
        "description": "Returns the current state of tasks (queued and assigned).",
        "operationId": "get_all_tasks_tasks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Capabilities": {
        "properties": {
          "cpus": {
            "type": "integer",
            "title": "Cpus"
          },
          "ram_gb": {
            "type": "integer",
            "title": "Ram Gb"
          },
          "gpus": {
            "type": "integer",
            "title": "Gpus"
          }
        },
        "type": "object",
        "required": [
          "cpus",
          "ram_gb",
          "gpus"
        ],
        "title": "Capabilities",
        "description": "Defines the compute capabilities of a worker.\nThe ram_gb field is aliased for proper serialization."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "RegisterForm": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "capabilities": {
            "$ref": "#/components/schemas/Capabilities"
          }
        },
        "type": "object",
        "required": [
          "name",
          "capabilities"
        ],
        "title": "RegisterForm",
        "description": "Model for the data submitted during worker registration."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}